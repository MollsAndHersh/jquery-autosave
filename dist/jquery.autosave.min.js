/*!
jquery.autosave - v2.0.0-rc1 - 2013-01-05
https://github.com/kflorence/jquery-autosave
Periodically saves form data based on a set of critera.

Copyright (C) 2013 Kyle Florence
Released under the BSD, MIT licenses
*/
(function(window,$){"use strict";function arr(obj){return $.isArray(obj)?obj:[obj]}function error(message){throw Error("( "+namespace+" ) "+message)}function namespacer(namespace,items,separator,before){var i,item,length=items.length,namespaced={};if(length&&namespace)for(separator||(separator="."),i=0;length>i;i++)item=items[i],namespaced[item]=before?namespace+separator+item:item+separator+namespace;return namespaced}function Handler(settings){return Handler.isHandler(this)?($.extend(this,settings),this.uuid=uuid++,undefined):new Handler(settings)}function scopedFunc(){var args=aps.call(arguments,0),func=args.shift();return function(){return func.apply(this,args.concat(arguments))}}function Sequence(settings,process){return process===!0?this.process(settings):this.update(settings)}function Autosave(element,options){var form;this.element=element=$(element),this.options=options,element.is("form")?form=element:(form=element.find("form")).length||(form=element.closest("form")),this.form=form,element.on(eventNames.change+" "+eventNames.keyup,":input",function(event){var target=$(event.target);target.hasClass(options.ignore)||(target.addClass(classNames.change),options.change.apply(target,event))}),this.addHandler(options.handler||options.handlers).done(options.ready)}var namespace="autosave",uuid=0;$.extend(Handler.prototype,{constructor:Handler,options:{},run:$.noop,setup:$.noop,teardown:$.noop}),$.extend(Handler,{isHandler:function(){var matches,rFunctionName=/function ([^(]+)/;return function(object){return null!==object&&"object"==typeof object&&object.constructor&&(matches=rFunctionName.exec(""+object.constructor))&&matches[1]&&"handler"===matches[1].toLowerCase()}}(),resolveHandler:function(handler){var handlers,i,length,type,resolved=[];if(!handler)return resolved;for(handlers=arr(handler),i=0,length=handlers.length;length>i;i++)handler=handlers[i],type=typeof handler,"function"===type?handler={run:handler}:"string"===type&&(handler=Autosave.handlers[handler]),type=typeof handler,"object"!==type?error("Unable to resolve Handler ( "+type+" )"):Handler.isHandler(handler)||(handler=new Handler(handler)),resolved.push(handler);return resolved}});var aps=Array.prototype.slice;Sequence.prototype={constructor:Sequence,process:function(settings){return this.update(settings),this.head=new $.Deferred,this.deferred=new $.Deferred,this.tail=this.head,$.each(this.settings.items,$.proxy(function(i,item){this.tail=this.tail.then(scopedFunc(this.settings.each,this.tail,item))},this)),this.tail.done(scopedFunc(this.deferred.resolve)),this.head.resolve(this.settings.data),this.deferred.promise()},update:function(settings){return settings&&(this.settings=$.extend(!0,{},Sequence.settings,settings)),this}},Sequence.settings={data:{},each:function(dfd,item,data){return data},items:[]},$.each(Sequence.settings,function(key){Sequence.prototype[key]=function(value){return this.settings[key]=value,this}});var classNames=namespacer(namespace,["change"],"-",!0),eventNames=namespacer(namespace,["change","keyup"]);$.extend(Autosave.prototype,{destroy:function(){return this.interval(),this.element.removeData(namespace).off("autosave"),this.inputs().removeClass(classNames.change),this.removeHandler(this.handlers)},handlers:{},inputs:function(){return this.element.find(":input").not(this.options.ignore)},interval:function(interval,callback){this.timer&&(clearTimeout(this.timer),this.timer=null),!isNaN(parseInt(interval,10))&&$.isFunction(callback)&&(this.timer=setTimeout($.proxy(callback,this),interval))},removeHandler:function(){}}),$.extend(Autosave,{classNames:classNames,eventNames:eventNames,handlers:{},namespace:namespace,options:{handler:null,ignore:":hidden",change:$.noop,save:$.noop,ready:$.noop},version:"2.0.0-rc1"}),$.fn[namespace]=function(options){return options=$.extend(!0,{},Autosave.options,options),this.each(function(){$.data(this,namespace,new Autosave(this,options))})}})(this,jQuery);