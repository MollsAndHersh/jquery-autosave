/*!
jquery.autosave - v2.0.0-rc1 - 2014-06-22
https://github.com/kflorence/jquery-autosave
Periodically saves form data based on a set of critera.

Copyright (C) 2014 Kyle Florence
Released under the BSD, MIT licenses
*/!function(a){"function"==typeof define&&define.amd?define(["jquery","fixture"],a):a(jQuery,Fixture)}(function(a,b){function c(a,b,c,d){var e,f,g=b.length,h={};if(g&&a)for(c||(c="."),e=0;g>e;e++)f=b[e],h[f]=d?a+c+f:f+c+a;return h}function d(b,e){var f,g,h;return this instanceof d?(a.isPlainObject(b)&&(e=b,b=void 0),e=a.extend(!0,{},d.options,e),f=c(e.namespace,["change"],"-",!0),g=c(e.namespace,["change","keyup"]),h=e.fixture||e.fixtures,this.classNames=f,this.eventNames=g,this.fixtures={},this.options=e,this.attach(b),void this.addFixture(h).done(e.ready)):new d(b,e)}a.extend(d.prototype,{addFixture:function(c){var d,e=this;return new a.Deferred.Sequence(c).reduce(function(c){return d=b.create(c),d?a.when(d.attach(e)).done(function(){e.fixtures[d.uuid]=d}):void 0})},attach:function(b){var c=a(b||[]),d=this;(this.$elements?this.$elements.add(c):this.$elements=c).addClass(this.options.namespace).data(this.options.namespace,this),this.getInputs().on(this.eventNames.change+" "+this.eventNames.keyup,function(b){var c=a(b.target);c.not(d.options.ignore)&&!c.hasClass(d.classNames.change)&&a.when(d.options.change.apply(c.get(0),b)).done(function(){c.addClass(d.classNames.change)})})},destroy:function(){return this.removeFixtures(this.getFixtures()).done(a.proxy(this.detach,this))},detach:function(){this.$elements.removeClass(this.options.namespace).removeData(this.options.namespace),this.$elements=a([]),this.getInputs().off(this.options.namespace)},getElement:function(){return this.$elements},getFixture:function(c){var d,e,f,g,h=0,i=[];if(null==c){for(f in this.fixtures)i.push(this.fixtures[f]);return i}for(c=a.makeArray(c);h<c.length;h++)if(e=c[h],null!=e)if(g=typeof e,"number"===g)d=this.fixtures[e],d&&i.push(d);else if("string"===g)for(f in this.fixtures)d=this.fixtures[f],"string"==typeof d.name&&new RegExp(e+"(?:\\.|$)").test(d.name)&&i.push(d);else b.isFixture(e)&&e.equals(this.fixtures[e.uuid])&&i.push(e);return i},getInput:function(b){var c=(b?a(b):this.$elements).find(":input");return(c.length?c:c.end().filter(":input")).not(this.options.ignore)},getOption:function(a){return void 0===a?this.options:this.options[a]},removeFixture:function(b){var c=this,d=new a.Deferred.Sequence(this.getFixtures(b));return d.reduce(function(b){return a.when(b.detach(c)).done(function(){delete c.fixtures[b.uuid]})})},save:function(b,c,d){var e=new a.Deferred.Sequence(this.getFixtures());return b instanceof a.Event||(d=c,c=b,b=void 0),e.reduce({data:d,event:b,inputs:this.getInputs(c)},function(b,c){var d=a.Deferred();return a.when(b.interact(c)).done(function(a){d.resolve(void 0!==a?a:c)}).fail(e.master.reject),d})}}),a.each(["addFixture","getElement","getFixture","getInput","getOption","removeFixture"],function(a,b){d.prototype[b+"s"]=d.prototype[b]}),a.extend(d,{options:{change:a.noop,fixture:null,ignore:":disabled",namespace:"autosave",ready:a.noop},version:"<%= pkg.version %>"}),a.Autosave=d,a.fn.autosave=function(a){return this.each(function(){new d(this,a)})}});