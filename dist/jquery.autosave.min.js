/*!
jquery.autosave - v2.0.0-rc1
2012-12-31

https://github.com/kflorence/jquery-autosave
Periodically saves form data based on a set of critera.

Copyright (C) 2012 Kyle Florence
Released under the BSD, MIT licenses
*/
(function(window,$,undefined){"use strict";function arr(obj){return $.isArray(obj)?obj:[obj]}function error(message){throw Error("( "+namespace+" ) "+message)}function join(obj,separator){var k,items=[];if("function"==typeof obj.join)items=obj;else for(k in obj)obj.hasOwnProperty(k)&&items.push(obj[k]);return items.join(separator)}function namespacer(namespace,items,separator,before){var i,item,length=items.length,namespaced={};if(length&&namespace)for(separator||(separator="."),i=0;length>i;i++)item=items[i],namespaced[item]=before?namespace+separator+item:item+separator+namespace;return namespaced}function Handler(settings){return Handler.isHandler(this)?($.extend(this,settings),this.uuid=uuid++,undefined):new Handler(settings)}function Autosave(element,options){var form;element=$(element),element.is("form")?form=element:(form=element.find("form")).length||(form=element.closest("form")),element.on(inputEvents,":input",function(event){var target=$(event.target);target.hasClass(options.ignore)||(target.addClass(classNames.change),options.change.apply(target,event))}),this.element=element,this.form=form,this.options=options,this.addHandler(options.handler||options.handlers).done(options.ready)}Handler.prototype={constructor:Handler,options:{},run:$.noop,setup:$.noop,teardown:$.noop},Handler.isHandler=function(){var matches,rFunctionName=/function ([^(]+)/;return function(object){return null!==object&&"object"==typeof object&&object.constructor&&(matches=rFunctionName.exec(""+object.constructor))&&matches[1]&&"handler"===matches[1].toLowerCase()}}(),Handler.resolveHandler=function(handler){var handlers,i,length,type,resolved=[];if(!handler)return resolved;for(handlers=arr(handler),i=0,length=handlers.length;length>i;i++)handler=handlers[i],type=typeof handler,"function"===type?handler={run:handler}:"string"===type&&(handler=Autosave.handlers[handler]),type=typeof handler,"object"!==type?error("Unable to resolve Handler ( "+type+" )"):Handler.isHandler(handler)||(handler=new Handler(handler)),resolved.push(handler);return resolved};var namespace="autosave",classNames=namespacer(namespace,["change"],"-",!0),eventNames=namespacer(namespace,["change","keyup"]),inputEvents=join(eventNames," "),uuid=0;Autosave.prototype={addHandler:function(handler){var i,length,chain=new $.Deferred,handlers=Handler.resolveHandler(handler),promise=chain,self=this;for(i=0,length=handlers.length;length>i;i++)handler=handlers[i],promise=promise.pipe(function(){return handler.setup(handler.options)}).done(function(){self.handlers[handler.uuid]=handler});return chain.resolve(),promise},constructor:Autosave,destroy:function(){return this.interval(),this.element.removeData(namespace).off("autosave"),this.inputs().removeClass(classNames.change),this.removeHandler(this.handlers)},handlers:{},inputs:function(){return this.element.find(":input").not(this.options.ignore)},interval:function(interval,callback){this.timer&&(clearTimeout(this.timer),this.timer=null),!isNaN(parseInt(interval,10))&&$.isFunction(callback)&&(this.timer=setTimeout($.proxy(callback,this),interval))},removeHandler:function(){},save:function(event,inputs){var handler,chain=new $.Deferred,data={},deferred=new $.Deferred,promise=chain;event instanceof $.Event||(inputs=event,event=undefined),inputs=inputs?$(inputs).filter(":input"):this.inputs();for(handler in this.handlers)handler=this.handlers[handler],promise=promise.pipe(function(data){return handler.run(event,handler.options,inputs,data)||data}).fail(function(data){deferred.reject(data)});return promise.done(function(data){deferred.resolve(data)}),chain.resolve(data),deferred.promise()}},$.extend(Autosave,{classNames:classNames,eventNames:eventNames,handlers:{},namespace:namespace,options:{handler:null,ignore:":hidden",change:$.noop,save:$.noop,ready:$.noop},version:""}),$.fn[namespace]=function(options){return options=$.extend(!0,{},Autosave.options,options),this.each(function(){$.data(this,namespace,new Autosave(this,options))})}})(this,jQuery);